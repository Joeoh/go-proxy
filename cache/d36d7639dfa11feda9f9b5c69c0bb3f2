HTTP/1.1 200 OK
Date: Mon, 20 Feb 2017 03:42:04 GMT
Server: Apache/2.4.25
Cache-Control: public
Last-Modified: Fri, 04 Sep 2015 16:21:03 GMT
Connection: close
Transfer-Encoding: chunked
Content-Type: text/javascript; charset=utf-8

89a7
//<script>



// JAVASCRIPT FOR THE TRINITY THEME



// JavaScript on/off class hooks, useful to write CSS dependent on the state of JavaScript
(function(C) {
	C.className = C.className.replace(/\bno-js\b/g,'') + ' js';
}(document.documentElement));
// https://gist.github.com/1035674


/*
// BaseUp JS
*/


// Legacy browser support requires jQuery to work

(function($){

    'use strict';
    
    // isIE
    /* github.com/davesmiths/isIE */var isIE=false,isIEmode;/*@cc_on isIE=@_jscript_version;@*/if(isIE!==false){if(isIE==5.8)isIE=8;else if(isIE==5.7 && window.XMLHttpRequest)isIE=7;else if(isIE==5.7 || isIE==5.6)isIE=6;else if(isIE<=5.5)isIE=5;isIEmode=isIE;if(document.documentMode)isIEmode=document.documentMode;}


    $.fn.baseUp = function(o) {
        
        /*
        //  - Fix for .clear to work when placed after positional floats in IE 6 and 7
        //    - Note clear must not have hasLayout triggered otherwise the fix will fail
        //    - Note Positional floats can also be cleared with a wrapping .lay element
        */
        if (o.legacySupportClear) {
            if (isIE == 7 || isIE == 6) {
                return this.each(function() {
                    var $this = $(this);
                    if ($this.find('> .baseup-legacy-support-clear-a').length === 0) {
                        $this.prepend('<div class="baseup-legacy-support-clear-a"></div><div class="baseup-legacy-support-clear-b"></div>');
                    }
                });
            }
        }

        /*
        //  - Fix for .lay .lay-left, lay-right and .lay-centered to ensure positional
        //    floats display as expected in IE 6
        */
        if (o.legacySupportLay) {
            if (isIE == 6) {
                return this.each(function() {
                    var $this = $(this);
                    if ($this.find('> .baseup-legacy-support-lay').length === 0) {
                        $this.html('<div class="baseup-legacy-support-lay">'+$this.html()+'</div>');
                    }
                });
            }
        }
            
        if (o.legacySupportCols) {
            
            // For IE 6 at the mo, but really it's whether child selector is supported
            if (isIE == 6) {
                this.each(function() {
                
                    var $cols = $this = $(this)
                        ,val
                        ,valLength
                    ;
                    
                    
                    // Cols classes
                    if ($this.find('> .baseup-legacy-support-lay').length) {
                        $cols = $this.find('> .baseup-legacy-support-lay');
                    }
                    
                    $cols.find('> *').not('.clear').each(function() {
                        $(this).addClass('col');
                    });
                    
                    
                    // Widths classes
                    // Copies the class div.widths-blah or div.widths-blah-Nup, renames to width-blah or width-blah-Nup and applies to all children except with .clear class or those already with a width class
                    val = $this.attr('class').match(/\s?widths-[0-9a-z-]+/g);
                    if (val) {
                        valLength = val.length;
                        // Get the last set widths class if more than one is set
                        for (i = 0; i < valLength; i++) {
                            val[i] = val[i].replace('widths', 'width');
                            if (m = val[i].match(/([0-9]+)up$/)) {
                                val[i] = {bp: m[1], val: val[i]};
                            }
                            else {
                                val[i] = {bp: 0, val: val[i]};
                            }
                                
                        }
                        
                        $cols.find('> *').not('.clear').each(function() {
                            var $this = $(this)
                                ,className = $this.attr('class')
                                ,bp
                            ;
                            for (i = 0; i < valLength; i++) {
                                bp = val[i].bp + 'up';
                                if (val[i].bp === 0) {
                                    bp = '';
                                }
                                if (!className.match(new RegExp("/\s?width-[0-9a-z]+"+bp+"/g"))) {
                                    $this.addClass(val[i].val);
                                }
                            }
                        });                        
                    }



                    // Guts Full Width Friendly classes
                    val = $this.attr('class').match(/\s?guts-fw[0-9a-z-]*/g);

                    if (val) {
                        // Get the last set widths class if more than one is set
                        val = val[val.length - 1];
                        val = val.replace('guts-fw', 'gut-left');
                        
                        $cols.find('> * > *').not(".clear, [class^='gut-left-'],[class*=' gut-left-']").each(function() {
                            $(this).addClass(val);
                        });
                    }

                    
                });
                
            }
            return this;

        }
    };
    
    // Engage legacy support
    $(function() {
        $('.clear').baseUp({legacySupportClear:true});
        $('.lay, .lay-left, .lay-right, .lay-centered').baseUp({legacySupportLay:true});
        $('.cols').baseUp({legacySupportCols:true});
    });

    
}(jQuery));
// Load Loadrunner, a JavaScript Dependency Manager, and do stuff with it, no need to touch the HTML
(function() {
    var script = document.createElement('script'),firstScript = document.getElementsByTagName('script')[0],loaded;
    script.type = 'text/javascript';script.async = true;script.onreadystatechange = script.onload = function(e) {
		if (!loaded && (!this.readyState || this.readyState === 'complete' || this.readyState === 'loaded')) {
			this.onreadystatechange = null;loaded = 1;

	        (function() {

				// Do stuff with Loadrunner

				// Sticky navbar
				//using(tms.SERVER_DOCROOT_NET + '/assets/js/jquery-sticky/1/jquery-sticky.js', function(){
				//	$(function() {
				//		$('.tier-site-primary-nav').sticky({topSpacing:0}).css({width:'100%', zIndex:1000}).on('click', function(e) {
				//			if ($(e.target).closest('a,input,textarea').length == 0) {
				//				//window.scrollTo(0, 0);
				//				$('html, body').animate({ scrollTop: 0 }, 150, 'linear');
				//			}
				//		});
				//	});
				//});

				// Site Menu: Load and apply
				using(tms.SERVER_DOCROOT_NET + '/assets/js/jquery-site-menu/1.2.0/jquery-site-menu.js', function(){
					$(function() {
						if ($.fn.siteMenuTrinityDigitalWeb) {
							$('.n li.menu').siteMenuTrinityDigitalWeb();
							$('.nav-site-primary li.menu').siteMenuTrinityDigitalWeb();
						}
					});
				});
				if (typeof respond === 'undefined') {
					var script = document.createElement('script');script.type = 'text/javascript';script.async = true;
					script.src = '/tms/tms.php?tmsproxy=respondjs';
					firstScript.parentNode.insertBefore(script, firstScript);
				}
				else {
					respond.update();
				}

	        }());
        }
    };
    script.src = tms.SERVER_DOCROOT_NET + '/assets/js/loadrunner/loadrunner.js';firstScript.parentNode.insertBefore(script, firstScript);
})();

/*github.com/davesmiths/active*/(function(a){a.fn.active=function(f){var c=this,e,b,d,g;if(a.type(f)==="function"){f={callback:f}}b=f.delay||100;d=f.ns?"."+f.ns:"";g=f.callback||function(){};a(window).on("resize"+d,function(){clearTimeout(e);e=setTimeout(function(){g.call(c)},b)});return g.call(c)}}(jQuery));



$(function() {

	// Web Thing Examples
	// To save having to do things twice.
	$('.webthing').each(function() {
		var $this = $(this);
		var html = "\n" + $this.html().replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(new RegExp("\t", 'g'), "  ");
		while (new RegExp("\n[^\\s]", 'g').test(html) === false) {
			html = html.replace(new RegExp("\n\\s", 'g'), "\n");
		}
		$this.after('<pre>' + html.replace(/^\s+/, '') + '</pre>');
	});

	// Header Tagname
	//$('.m :header').each(function() {
	//	var $this = $(this);
	//	$this.append('<span class="tagname">'+$this[0].tagName.toLowerCase()+'</span>');
	//});

	// List introduction paragraph
	//$('p+ul,p+ol,p+dl').each(function() {
	//	var $p = $(this).prev();
	//	if (!$p.hasClass('list-introduction') && /:\s*$/.test($p.text())) {
	//		$p.addClass('list-introduction');
	//	}
	//});


	// Modifying this JS to be sparse.

	/* jQuery UI */
	if ($.fn.tabs) {
		$(".tabs_group").tabs();
	}

	if ($.fn.accordion) {
		$( ".accordion" ).accordion({
			collapsible: true,
			autoHeight: false,
			navigation: true
		});
	}

	// Royal slider
	if ($.fn.royalSlider) {

		// Default implementation
		var $_slideshow_options = {
			arrowsNav: true,
			//autoScaleSliderHeight: 350,
			arrowsNavAutoHide: false,
			fadeinLoadedSlide: false,
			controlNavigationSpacing: 0,
			controlNavigation: 'bullets',
			imageScaleMode: 'fill',
			imageAlignCenter:true,
			blockLoop: true,
			loop: true,
			numImagesToPreload: 6,
			//transitionType: 'fade',
			keyboardNavEnabled: true,
			block: {
				delay: 0
			},
			autoPlay: {
				enabled: true,
				pauseOnHover: true,
				delay: 10000
			},
			transitionSpeed: 250,
			easeInOut: 'easeOutSine',
			slidesSpacing: 0
		};

		$('.slider_default').each(function() {
			var a = $.extend({}, $_slideshow_options, $(this).data());
			//console.log(a);
			$(this).royalSlider(a);
		});


		// Vertical version
		var $_vertical_slideshow_options = {
			arrowsNav: false,
			fadeinLoadedSlide: true,
			controlNavigationSpacing: 0,
			controlNavigation: 'thumbnails',
			thumbs: {
				autoCenter: false,
				fitInViewport: true,
				orientation: 'vertical',
				spacing: 0
			},
			keyboardNavEnabled: true,
			imageScaleMode: 'fill',
			imageAlignCenter:true,
			loop: false,
			loopRewind: true,
			numImagesToPreload: 3,
			video: {
				autoHideArrows:true,
				autoHideControlNav:false,
				autoHideBlocks: true
			},
			autoScaleSlider: true,
			autoScaleSliderWidth: 960,
			autoScaleSliderHeight: 450,
			slidesSpacing: 0
		};

		$('.slider_vertical').each(function() {
			var ratio = $(this).data('slider-ratio');
			$_vertical_slideshow_options.autoScaleSliderWidth = 100*ratio;
			$_vertical_slideshow_options.autoScaleSliderHeight = 100;
			$(this).royalSlider($.extend({}, $_vertical_slideshow_options, $(this).data()));
		});

		// Horizontal
		var $_horizontal_slideshow_options = {
			controlNavigation:'thumbnails',
			imageScaleMode: 'fill',
			allowCSS3OnMacWebkit: true,
			arrowsNav: false,
			fullscreen: false,
			loop: false,
			thumbs: {
				firstMargin: false
			},
			autoPlay: {
				enabled: true,
				delay: 2000
			},

			thumbsFirstMargin: false,
			autoScaleSlider: true,
			autoScaleSliderWidth: 960,
			autoScaleSliderHeight: 600,
			keyboardNavEnabled: true
		};

		$('.slider_horizontal').each(function() {
			//console.log($.extend({}, $_horizontal_slideshow_options, $(this).data()));
			$(this).royalSlider($.extend($_horizontal_slideshow_options, $(this).data()));
		});

		var $_gallery_options = {
			controlNavigation: 'thumbnails',
			autoScaleSlider: true,
			//autoScaleSliderWidth: 960,
			//autoScaleSliderHeight: 850,
			loop: false,
			imageScaleMode: 'fit-if-smaller',
			navigateByClick: true,
			numImagesToPreload:3,
			arrowsNavAutoHide: true,
			arrowsNavHideOnTouch: true,
			keyboardNavEnabled: true,
			fadeinLoadedSlide: true,
			globalCaption: true,
			globalCaptionInside: false,
			thumbs: {
			  appendSpan: true,
			  firstMargin: true,
			  paddingBottom: 4

			}
		};

		$('.slider_gallery_default').each(function() {
			//console.log($.extend({}, $_horizontal_slideshow_options, $(this).data()));
			$(this).royalSlider($.extend($_gallery_options, $(this).data()));
		});

		/* Side by side gallery */
		var win = $(window);

		$_gallery_sbs_options = {
			controlNavigation: 'thumbnails',
			thumbs: {
			  orientation: 'vertical',
			  navigation: false,
			  fitInViewport: (win.width() < 760) ? false : true,
			  spacing: 1,
			  autoCenter: false
			},
			deeplinking: {
			  enabled: true,
			  change: true,
			  prefix: 'image-'
			},
			globalCaption: false,
			numImagesToPreload: 2,
			fadeinLoadedSlide: false,
			imageAlignCenter: true,
			imageScaleMode: 'fill',
			transitionType:'move',
			autoScaleSlider: true,
			autoScaleSliderWidth: 900,
			autoScaleSliderHeight: 400,
			loop: true,
			arrowsNav: false,
			keyboardNavEnabled: true,
			imgWidth: 792,
			imgHeight: 479
		 };

		$('.slider_gallery_sbs').each(function() {
			//console.log($.extend({}, $_horizontal_slideshow_options, $(this).data()));
			var $s = $(this).royalSlider($.extend($_gallery_sbs_options, $(this).data())).data('royalSlider');

			(function(item, win) {
			   return function() {
				win.resize(function() {
					if(win.width() < 760) {
					  item.st.thumbs.fitInViewport = false;
					} else {
					  item.st.thumbs.fitInViewport = true;
					}
				  });
			   };
			})($s, win);
		});


		// Default implementation
		var $_trinitygallery_options = {
			autoScaleSlider: true,
			autoScaleSliderWidth: 16,
			autoScaleSliderHeight: 10,
			arrowsNav: true,
			//autoScaleSliderHeight: 350,
			arrowsNavAutoHide: false,
			fadeinLoadedSlide: false,
			controlNavigationSpacing: 0,
			controlNavigation: 'tabs',
			imageScaleMode: 'fill',
			imageAlignCenter:true,
			blockLoop: true,
			loop: true,
			numImagesToPreload: 5,
			//transitionType: 'fade',
			keyboardNavEnabled: true,
			block: {
				delay: 0
			},
			autoPlay: {
				enabled: false,
				pauseOnHover: true,
				delay: 10000
			},
			transitionSpeed: 0,
			easeInOut: 'easeOutSine',
			slidesSpacing: 0
		};

		$('.trinitygallery-shortcode .royalSlider').each(function(){

			var a,
				$this,
				slider;

			$this = $(this);
			a = $.extend({}, $_trinitygallery_options, $(this).data());
			slider = $this.royalSlider(a).data('royalSlider');
			$thumbnails = $this.find('.rsTabs');
			$this.after($thumbnails);
			//$thumbnails.find('[data-trinitygallery-shortcode-for]').on('click', function(e) {
			//	e.preventDefault();
			//	slider.goTo($(this).data('trinitygallery-shortcode-for')); // go to slide with id
			//});


		});

	}

	// Lite Accordion
	if($.fn.liteAccordion){
		var $default_lite_accordion_options = {
			responsive: true,
			slideSpeed: 500,
			containerWidth: 720,
			onTriggerSlide: function() {
				this.find('figcaption').hide();
			},
			onSlideAnimComplete : function() {
				this.find('figcaption').fadeIn();
			},
			easing: 'easeInOutQuart'
		};
		if(typeof $custom_lite_accordion_options != 'undefined'){
			$.extend($default_lite_accordion_options, $custom_lite_accordion_options);
		}

		$('.horizontal_accordion').liteAccordion($default_options).find('figcaption:first').show();
	}

	// Expand collapse code elements of format h3 ~ textarea.code
	$('textarea.code').each(function() {
		var $t = $(this);
		$t.css({width: $t.parent().width()});
		var $h = $(this).prev("h3");
		$h.bind('click', function(){
			$t.slideToggle('fast');
			$(this).toggleClass('hidden');
		});
	});

	// RSS hyperlink SSL issue fix
	$('.rss-link').each(function() {
		$(this).prop('href', $(this).prop('href').replace('https:', 'http:'));
	});

});

$(function() {
	var $navPri = $('.nav-site-primary-main > ul');
	$navPri.prepend('<li class="nav-site-primary-site-title"><a href="'+tms.SITE_DOCROOT_NET+'">'+$('span.site-title').text()+'</a></li>');
	$navPri.prepend('<li class="nav-site-primary-trinity"><a href="http://www.tcd.ie/">Trinity</a></li>');
});


// Dynamically create the contents of the sitemap menu item by cloning the sitemap it links to
// Dave Smith 2013 September 19
$(function() {

	var $navPri,
		$sitemapLink,
		$sitemapID,
		$sitemapClone,
		$sitemapLinks,
		$first,
		$last,
		$preFirst,
		$preLast;


	$navPri = $('.nav-site-primary');
	$sitemapLink = $navPri.find('a[href$="#sitemap"]');
	if ($sitemapLink.length) {
		$sitemapID = $sitemapLink.attr('href').split('#')[1];
		$sitemapClone = $('#'+$sitemapID).find('ul:first').clone();
		$sitemapClone.addClass('nav-site-primary-sitemap-clone').css({display:'none'});
		$navPri.append($sitemapClone);
		$sitemapLinks = $sitemapClone.find('a');
		$first = $sitemapLinks.first();
		$last = $sitemapLinks.last();
		$preFirst = $('<a tabindex="0"></a>').prependTo($sitemapClone);
		$postLast = $('<a tabindex="0"></a>').appendTo($sitemapClone);
		closeMenu = function() {
			$sitemapLink.removeClass('active');
			$sitemapClone.css({display:'none'});
		};
		openMenu = function() {
			$sitemapLink.addClass('active');
			$sitemapClone.css({display:'block', left:$sitemapLink.position().left+'px'});
			$first.focus();
		};

		$sitemapLink.on('click', function() {
			$this = $(this);
			if ($this.hasClass('active')) {
				closeMenu();
			}
			else {
				openMenu();
			}
			return false;
		});

		$sitemapLinks.on('focus', function() {
			$sitemapClone.data('sitemapCloneLink', true);
		});

		$preFirst.on('focus', function() {
			if ($sitemapClone.data('sitemapCloneLink')) {
				$sitemapClone.data('sitemapCloneLink', false);
				$sitemapLink.click();
				$navPri.find('a').eq(0).focus();
			}
			else {
				$first.focus();
			}
		});

		$postLast.on('focus', function() {
			if ($sitemapClone.data('sitemapCloneLink')) {
				$sitemapClone.data('sitemapCloneLink', false);
				$sitemapLink.click();
				$navPri.find('a').eq(1).focus();
			}
			else {
				$last.focus();
			}
		});

		$(window).on('click', function(e) {
			if ($(e.target).closest('.nav-site-primary-sitemap-clone').length === 0) {
				closeMenu();
			}
		});
		$(window).on('keyup', function(e) {
			if (e.key == 'Esc') {
				closeMenu();
			}
		});
	}
});


// Make the primary navigation responsive
// Dave Smith 2013 October 15
$(function() {

	// Position relative required to make position() work properly later on
	var $primaryNav,
		tid,
		run,
		runBuffer;

	// Get the primary nav
	$primaryNav = $('.nav-site-primary-main');

	if ($primaryNav.length) {

		run = function() {

			var edgePrimaryNav,
				$a;

			// Get a number of pixels to the edge of the primary nav relative to the document
			edgePrimaryNav = $primaryNav.offset().left + $primaryNav.width();

			// Get the first level links of the primary nav
			$a = $primaryNav.find('> ul > li > a');

			// Find any links that
			$a.each(function(i) {

				var $this = $(this),
					edgeLink = $this.offset().left + $this.outerWidth();

				if (edgeLink < edgePrimaryNav) {
					$this.css({visibility:'visible'});
				}
				else {
					$this.css({visibility:'hidden'});
				}
			});

		};

		// Prevent unnecessary calls to run
		runBuffer = function() {
			clearTimeout(tid);
			tid = setTimeout(run, 50);
		};

		run();

		$(window).on('resize', runBuffer);

	}


});


/*--------------------------------------------------------------------
 * JQuery Plugin: "EqualHeights" & "EqualWidths"
 * by:	Scott Jehl, Todd Parker, Maggie Costello Wachs (http://www.filamentgroup.com)
 *
 * Copyright (c) 2007 Filament Group
 * Licensed under GPL (http://www.opensource.org/licenses/gpl-license.php)
 *
 * Description: Compares the heights or widths of the top-level children of a provided element
 		and sets their min-height to the tallest height (or width to widest width). Sets in em units
 		by default if pxToEm() method is available.
 * Dependencies: jQuery library, pxToEm method	(article: http://www.filamentgroup.com/lab/retaining_scalable_interfaces_with_pixel_to_em_conversion/)
 * Usage Example: $(element).equalHeights();
   						      Optional: to set min-height in px, pass a true argument: $(element).equalHeights(true);
 * Version: 2.0, 07.24.2008
 * Changelog:
 *  08.02.2007 initial Version 1.0
 *  07.24.2008 v 2.0 - added support for widths
 *  24.10.2013 Dave Smith added perRow support
--------------------------------------------------------------------*/

$.fn.equalHeights = function(o) {

	o = o || {};

	var px = o.px || false,
		childrenSelector = o.childrenSelector || '> *',
		perRow = (o.perRow === undefined) ? true : o.perRow,
		processRow,
		delay = o.delay;

	processRow = function($children) {

		currentTallest = 0;

		// To be able to call this function on window resize need to reset the heights first
		// for ie6, set height since min-height isn't supported
		if ($.browser.msie && $.browser.version == 6.0) {
			$children.css({'height': 'auto'});
		}

		$children.css({'min-height': 0});

		$children.each(function(){
			var $child = $(this);
			if ($child.height() > currentTallest) {
				currentTallest = $child.height();
			}
			$child.data('equalHeightsActive.overflow', $child.css('overflow'));
			$child.css({overflow:'hidden'});
		});

		// Fix issue in Firefox (affected v19) where it didn't always reflow floats back over to the left
		currentTallest += 1;

		if (!px && Number.prototype.pxToEm) {
			currentTallest = currentTallest.pxToEm(); //use ems unless px is specified
		}

		// for ie6, set height since min-height isn't supported
		if ($.browser.msie && $.browser.version == 6.0) {
			$children.css({'height': currentTallest});
		}
		$children.css({'min-height': currentTallest});

		// 2013 November Webkit browsers had a bug where the margin of a descendent would persist even though the height had changed
		// This is an attempt to fix it
		$children.each(function() {
			var $this = $(this);

			setTimeout(function() {
				$this.css({overflow:$this.data('equalHeightsActive.overflow')});
			},delay);

		});

	};

	$(this).each(function(){

		var currentTallest,
			$children = $(this).find(childrenSelector),
			currentPositionTop = -1,
			rows = [],
			rowsLength;


		// Check if there are any children
		if ($children.length) {

			if (perRow) {

				$children.each(function() {
					var $this = $(this);
					if ($this.position().top > currentPositionTop) {
						if (rows.length > 0) {
							// Do row
							processRow(rows[rows.length - 1]);
						}
						currentPositionTop = $this.position().top;
						rows[rows.length] = $();
					}
					rows[rows.length - 1] = rows[rows.length - 1].add($this);
				});

				// Do row
				processRow(rows[rows.length - 1]);

			}
			else {
				processRow($children);
			}

		}


	});
	return this;
};

// just in case you need it...
// Modifications done to improve equalHeights are incorporated here but untested
$.fn.equalWidths = function(o) {

	o = o || {};

	var px = o.px || false,
		childrenSelector = o.childrenSelector || '> *';


	$(this).each(function() {

		var currentWidest = 0,
			$children = $(this).find(childrenSelector);

		// for ie6, set width since min-width isn't supported
		if ($.browser.msie && $.browser.version == 6.0) {
			$children.css({'width': 'auto'});
		}
		$children.css({'min-width': 0});

		$children.each(function() {
			var $child = $(this);
			if ($child.width() > currentWidest) {
				currentWidest = $child.width();
			}
		});
		if (!px && Number.prototype.pxToEm) {
			currentWidest = currentWidest.pxToEm(); //use ems unless px is specified
		}
		// for ie6, set width since min-width isn't supported
		if ($.browser.msie && $.browser.version == 6.0) {
			$children.css({'width': currentWidest});
		}
		$children.css({'min-width': currentWidest});

	});
	return this;
};

$.fn.equalHeightsActive = function(o) {

	o = o || {};

	var doStuff,
		delay = o.delay || 250,
		childrenSelector = o.childrenSelector || '> *',
		timeoutID,
		perRow = (o.perRow === undefined) ? true : o.perRow,
		$this = $(this);


	doStuff = function() {
		$this.equalHeights({childrenSelector: childrenSelector, perRow: perRow, delay: delay});
	};

	timeoutID = setTimeout(doStuff, delay);

	// Ensure equal heights runs once
	doStuff();

	$(window).on('resize', function() {
		clearTimeout(timeoutID);
		timeoutID = setTimeout(doStuff, delay);
	});

	return this;

};
// The full shebang to get spotlights with equal heights and recalculate on window resize
$(function() {
	$('.layout-list-inn').closest('ul,ol').equalHeightsActive({childrenSelector: '> li > div'}).addClass('layout-list-equalheightsactive');
	$('.row').equalHeightsActive({childrenSelector: '> .col > .inn'}).addClass('row-equalheightsactive');
});



/* imagefill v2.0.0 https://github.com/davesmiths/imagefill */
(function($) {

	'use strict';

	// $collection, to collect all the elements that can passed into imagefill so they can be updated on window.resize efficiently
	var $collection = $(),

		// Delay, on window resize the delay regulates the calls to the main function to prevent potential overload and unnecessary calls
		delay = 200,

		// tid is the timerid used to clear timeout in the window resize event
		tid,

		imagefillDataName = 'imagefill',

		run,
		runonce,
		runBuffer;

	// The main function
	run = function() {

		var $this = $(this),
			$image,
			alignPreset,
			horizontalPreset,
			verticalPreset,
			wrapperHeight,
			wrapperWidth,
			imageHeight,
			imageWidth,
			heightDifference,
			widthDifference,
			wrapperRatio,
			imageRatio,
			ratio,
			width,
			height,
			css,
			$wrapper,
			goldenRatioInv = 0.61803398874985,
			goldenRatioInvLeft = 0.38196601125015,
			imagefillDataHalign= imagefillDataName + '-halign',
			imagefillDataValign = imagefillDataName + '-valign',
			imagefillDataAlign = imagefillDataName + '-align';

		$wrapper = $this.parent();
		$image = $this;

		// Here in case the preset changes at any point
		alignPreset = $image.data(imagefillDataAlign) || 'center/center';
		alignPreset = alignPreset.split('/');
		horizontalPreset = alignPreset[0];
		verticalPreset = alignPreset[1] || 'center';
		horizontalPreset = $image.data(imagefillDataHalign) || horizontalPreset;
		verticalPreset = $image.data(imagefillDataValign) || verticalPreset;


		wrapperHeight = $wrapper.height() * 1;
		wrapperWidth = $wrapper.width() * 1;

		wrapperRatio = wrapperWidth / wrapperHeight;
		imageRatio = $image.data('imagefill-image-ratio');

//console.log('imageHeight:',imageHeight, 'imageWidth:', imageWidth);

		if (wrapperRatio > imageRatio) {
			ratio = true;
			width = '100%';
			height = 'auto';
			imageWidth = wrapperWidth;
			imageHeight = wrapperWidth / imageRatio;
		}
		else {
			ratio = false;
			width = 'auto';
			height = '100%';
			imageWidth = wrapperHeight * imageRatio;
			imageHeight = wrapperHeight;
		}

		$image.css({
			width: width,
			height: height
		});

		heightDifference = wrapperHeight - imageHeight;
		widthDifference = wrapperWidth - imageWidth;

//console.log('valign:',verticalPreset, 'halign:', horizontalPreset);
//console.log('wrapperHeight:',wrapperHeight, 'wrapperWidth:', wrapperWidth);
//console.log('imageHeight:',imageHeight, 'imageWidth:', imageWidth);
//console.log('wrapperRatio > imageRatio', wrapperRatio > imageRatio);

		// Default to valign third and halign third
		css = {
			position: 'absolute',
			top: heightDifference / 3 + 'px',
			left: widthDifference / 3 + 'px',
			bottom: 'auto',
			right: 'auto',
			marginRight: 'auto',
			marginBottom: 'auto'
		};


		// Vertical Presets
		if (ratio) {

			if ($.isNumeric(verticalPreset)) {
				verticalPreset = verticalPreset / 100;
			}
			else if (verticalPreset === 'third') {
				verticalPreset = 1/3;
			}
			else if (verticalPreset === '-third') {
				verticalPreset = 2/3;
			}
			else if (verticalPreset === 'golden') {
				verticalPreset = goldenRatioInvLeft;
			}
			else if (verticalPreset === '-golden') {
				verticalPreset = goldenRatioInv;
			}
			else if (verticalPreset === 'top') {
				verticalPreset = 0;
			}
			else if (verticalPreset === 'bottom') {
				verticalPreset = 1;
			}
			else if (verticalPreset === 'middle' || verticalPreset === 'center') {
				verticalPreset = 0.5;
			}

			if (0 <= verticalPreset && verticalPreset <= 1) {
				if (verticalPreset === 1) {
					css.top = 'auto';
					css.bottom = 0;
				}
				else {
					css.top = heightDifference * verticalPreset + 'px';
				}
			}

		}

		// Horizontal Presets
		else {

			if ($.isNumeric(horizontalPreset)) {
				horizontalPreset = horizontalPreset / 100;
			}
			else if (horizontalPreset === 'third') {
				horizontalPreset = 1/3;
			}
			else if (horizontalPreset === '-third') {
				horizontalPreset = 2/3;
			}
			else if (horizontalPreset === 'golden') {
				horizontalPreset = goldenRatioInvLeft;
			}
			else if (horizontalPreset === '-golden') {
				horizontalPreset = goldenRatioInv;
			}
			else if (horizontalPreset === 'left') {
				horizontalPreset = 0;
			}
			else if (horizontalPreset === 'right') {
				horizontalPreset = 1;
			}
			else if (horizontalPreset === 'middle' || horizontalPreset === 'center') {
				horizontalPreset = 0.5;
			}

			if (0 <= horizontalPreset && horizontalPreset <= 1) {
				if (horizontalPreset === 1) {
					css.left = 'auto';
					css.right = 0;
				}
				else {
					css.left = widthDifference * horizontalPreset + 'px';
				}
			}

		}

		$image.css(css);

	};

	runonce = function() {

		var $this = $(this),
			$wrapper,
			imagefillWrapperClass;

		imagefillWrapperClass = 'imagefill-wrapper ';
		imagefillWrapperClass += $this.data('imagefill-class') || '';

		// Wrap image if necessary
		if ($this.parent().is('.' + imagefillWrapperClass) === false) {
			$this.wrap('<div class="' + imagefillWrapperClass + '"></div>');
		}
		$wrapper = $this.parent();
		$wrapper.css({
			overflow:'hidden',
			position:'relative'
		});

		// Get the image width and height
		if ($this.data('imagefill-image-ratio') === undefined) {
			$this.css({
				display: 'block',
				position: 'static'
			});
			$this.data('imagefill-image-ratio', $this.width() / $this.height());
		}
		// Make position absolute in order to not upset the first wrapper width and height call in run()
		$this.css({position:'absolute'});

		// If the wrapper has no (min-)height use the height of the image
		if ($wrapper.height() === 0) {
    		$wrapper.css('minHeight', $this.height() + 'px');
		}

		run.call(this);
	};

	$.fn.imagefill = function(options) {

		var o = $.extend(
				{},
				options
			),
			$this = $(this);

		$this.data('imagefill-align', o.align);
		$this.data('imagefill-halign', o.halign);
		$this.data('imagefill-valign', o.valign);
		$this.data('imagefill-class', o.className);

		if (o.delay !== undefined) {
			delay = o.delay;
		}

		this.each(function() {
			$collection = $collection.add(this);
		});

		return this.each(function() {

			var $img = $(this),
				width = $img.attr('width'),
				height = $img.attr('height');

			// Optimised to call run when the width and height attributes are set, rather than wait for the image to load
			if (width === undefined || height === undefined) {
				$(this).on('load', function() {
					runonce.call(this);
				});
			}
			else {
				$img.data('imagefill-image-width', width);
				$img.data('imagefill-image-height', height);
				runonce.call(this);
			}
			// There may be caveats
			// http://stackoverflow.com/questions/10403983/cross-browser-image-onload-event-handling
		});

	};

	// Prevent unnecessary calls to run
	runBuffer = function() {
		clearTimeout(tid);
		tid = setTimeout(function() {
			$collection.each(run);
		}, delay);
	};

	$(window).on('resize', runBuffer);


}(jQuery));

$(function() {
	$('.imagefill').imagefill();
});


// showhideheadings
// Version 1.0.0
// Dave Smith 2015 September: http://codepen.io/davesmiths/pen/LpYoJq
// $('[data-showhideheadings]').showhideheadings();
$.fn.showhideheadings = function(i) {
	var o,active,radio,footer,$showhideheadings;

	$showhideheadings = $(this);

	o = $.extend({
		ns: 'showhideheadings',
		radio: false, // If multiple headings have data-showhideheadings-active on initialisation then only the last one made active
		footer: false, // If true the section > footer element is not hidden
		active: [] // An array of items using the same syntax for array.slice
	}, i);

	// The HTML trumps any settings passed into this function
	active = ($showhideheadings.data('showhideheadings')+'').replace(/\s+/g,'');
	if (active !== '') {
		o.active = active.split(',');
	}
	if ($showhideheadings.data('showhideheadings-radio') !== undefined) {
		o.radio = true;
	}
	if ($showhideheadings.data('showhideheadings-footer') !== undefined) {
		o.footer = true;
	}

	return $showhideheadings.each(function() {
		var headingsSelector,nextUntilSelector,$headings,$panels;

		// With each heading get the scoped content and set as its panel
		headingsSelector = 'header,h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6';
		nextUntilSelector = headingsSelector + ',section';
		if (o.footer) {
			nextUntilSelector += ',footer';
		}
		$headings = $(this).find(headingsSelector).filter(function() {
			return $(this).parent().not('header').length;
		});
		$panels = $([]);

		$headings.each(function(i) {
			var $panel,$heading;

			$heading = $(this);
			$panel = $heading.nextUntil(nextUntilSelector);

			// If there is only one sibling and it is a div then use that div as the content
			// Otherwise wrap the selected elements
			if ($panel.length === 1 && $panel.is('div')) {
					$panel.addClass(o.ns+'--content');
			}
			else {
				$panel = $panel.wrapAll('<div class="'+o.ns+'--content"></div>').parent();
			}

			// Wrap the content in a panel
			$panel = $panel.wrapAll('<div></div>').parent();

			$panels = $panels.add($panel);

			// Cover the heading with a link for ease of accessibility
			// At the point of writing this I intend to use ARIA and this link is not to be styled
			$heading.append('<a href=""></a>');

			$heading.data('headingData', {
				panelID:i,
				panelHeight:$panel.outerHeight()+'px'
			});

		});

		// On click set the active or not class
		$headings.on('click', function(e) {
			var $heading,$panel,$content,data;

			e.preventDefault();

			$heading = $(this);
			data = $heading.data('headingData');
			$panel = $panels.eq(data.panelID);
			$content = $panel.find('> div');

			// If active then close
			if ($heading.hasClass(o.ns+'--heading-active')) {
				$heading.removeClass(o.ns+'--heading-active');
				$panel.removeClass(o.ns+'--panel-active');
				$content.removeClass(o.ns+'--content-active');
				$panel.css({height:''});
			}
			else {
				$heading.addClass(o.ns+'--heading-active');
				$panel.addClass(o.ns+'--panel-active');
				$content.addClass(o.ns+'--content-active');
				$panel.css({height:data.panelHeight});
				// If Radio then close the others
				if (o.radio) {
					$headings.not($heading).filter('.'+o.ns+'--heading-active').triggerHandler('click');
				}
			}
		});

		// Initially hide all the panels, except those marked to be open
		for (i in o.active) {
			$headings.eq(o.active[i]).triggerHandler('click');
		}
		$headings.filter('[data-'+o.ns+'-active]:not(.'+o.ns+'--heading-active),:has(>[data-'+o.ns+'-active])').each(function() {
			$(this).triggerHandler('click');
		});

		// Prime the headings and panels
		$headings.addClass(o.ns+'--heading');
		$panels.addClass(o.ns+'--panel');


	});
};
$(function() {
	$('[data-showhideheadings]').showhideheadings();
});

0

